{
  "comments": [
    {
      "key": {
        "uuid": "9e033495_0d8e393b",
        "filename": "webrtc/modules/desktop_capture/cropping_window_capturer_win.cc",
        "patchSetId": 2
      },
      "lineNbr": 198,
      "author": {
        "id": 1000528
      },
      "writtenOn": "2017-08-23T00:58:18Z",
      "side": 1,
      "message": "Let me see if I understand this: content_rect is the content area of the window, and rgn_rect is the portion of it that Windows renders to the screen; correct? So for most apps they are the same, but for shaped windows they will be different, and it\u0027s possible that an app chooses a rectangular shape that is not the same as its content area.\n\nI think this could benefit from being factored out of this method, perhaps into a helper function alongside GetWindowContentRect. I suggest something like:\n\n  bool GetWindowRegionBoundingRect(DesktopRect* rect, int* region_type);\n\nThis will make this code a bit more readable because the semantics of content_rect won\u0027t then be changing based on region_type like it is now.",
      "range": {
        "startLine": 198,
        "startChar": 41,
        "endLine": 198,
        "endChar": 0
      },
      "revId": "4af9c5e6b7b08a635ec8307694b30f7f48d81650",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3bebae8f_66646d3e",
        "filename": "webrtc/modules/desktop_capture/cropping_window_capturer_win.cc",
        "patchSetId": 2
      },
      "lineNbr": 198,
      "author": {
        "id": 1196069
      },
      "writtenOn": "2017-08-23T03:29:34Z",
      "side": 1,
      "message": "Yes, that\u0027s the original meaning of the GetWindowRgn() and GetRgnBox(). But according to MSDN, GetRgnBox() always returns a rectangle smaller than GetWindowRect(), so GetRgnBox() either equals to GetWindowRect() or equals to GetCroppedWindowRect(), but larger than GetClientRect(). Intersecting it with both GetWindowRect() (here) and GetCroppedWindowRect() (in GetWindowRectInVirtualScreen()) seems duplicate.\nMSDN: The window region determines the area *within* the window where the system permits drawing. Link: https://msdn.microsoft.com/en-us/library/windows/desktop/dd144950(v\u003dvs.85).aspx.\n\nBut since this logic exists for a long time and it won\u0027t make any negative impact even it does nothing, I would prefer to keep it until I understand the original intention of these lines.\n\nThe code has been updated with a helper function. The signature is a little bit different to match Windows APIs.\n\nP.S. I believe that the purpose to get window rectangle both before (here) and after (in GetWindowRectInVirtualScreen()) is to avoid exposing content below |window| when it\u0027s moving. But since capturer is always slower than window position changes -- the former one is limited by video card and update frequency of the display, the later one should be real-time --  it won\u0027t help.",
      "parentUuid": "9e033495_0d8e393b",
      "range": {
        "startLine": 198,
        "startChar": 41,
        "endLine": 198,
        "endChar": 0
      },
      "revId": "4af9c5e6b7b08a635ec8307694b30f7f48d81650",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9b75113_98e1f58f",
        "filename": "webrtc/modules/desktop_capture/cropping_window_capturer_win.cc",
        "patchSetId": 2
      },
      "lineNbr": 198,
      "author": {
        "id": 1000528
      },
      "writtenOn": "2017-08-23T17:58:33Z",
      "side": 1,
      "message": "I don\u0027t understand this comment, but the code now LGTM modulo a couple of nits. If you think it\u0027s important I understand what you\u0027re saying here, then let\u0027s discuss offline.",
      "parentUuid": "3bebae8f_66646d3e",
      "range": {
        "startLine": 198,
        "startChar": 41,
        "endLine": 198,
        "endChar": 0
      },
      "revId": "4af9c5e6b7b08a635ec8307694b30f7f48d81650",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}